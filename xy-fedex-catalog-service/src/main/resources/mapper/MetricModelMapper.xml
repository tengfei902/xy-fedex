<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xy.fedex.catalog.dao.MetricModelDao" >
  <resultMap id="BaseResultMap" type="com.xy.fedex.catalog.po.MetricModelPO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="model_id" property="modelId" jdbcType="BIGINT" />
    <result column="metric_id" property="metricId" jdbcType="BIGINT" />
    <result column="metric_type" property="metricType" jdbcType="INTEGER" />
    <result column="formula" property="formula" jdbcType="VARCHAR" />
    <result column="advance_calculate" property="advanceCalculate" jdbcType="VARCHAR" />
    <result column="relate_metrics" property="relateMetrics" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, model_id, metric_id, metric_type, formula, advance_calculate,relate_metrics,
    status, create_time, update_time, creator
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from metric_model
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from metric_model
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xy.fedex.catalog.po.MetricModelPO" >
    insert into metric_model (id, model_id, metric_id,
      formula, advance_calculate,relate_metrics, status, create_time, update_time,
      creator)
    values (#{id,jdbcType=BIGINT}, #{modelId,jdbcType=BIGINT}, #{metricId,jdbcType=BIGINT}, 
      #{formula,jdbcType=VARCHAR}, #{advanceCalculate,jdbcType=VARCHAR},#{relateMetrics,jdbcType=VARCHAR},
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{creator,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xy.fedex.catalog.po.MetricModelPO" >
    insert into metric_model
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="modelId != null" >
        model_id,
      </if>
      <if test="metricId != null" >
        metric_id,
      </if>
      <if test="metricType != null" >
        metric_type,
      </if>
      <if test="formula != null" >
        formula,
      </if>
      <if test="advanceCalculate != null" >
        advance_calculate,
      </if>
      <if test="relateMetrics != null" >
        relate_metrics,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="modelId != null" >
        #{modelId,jdbcType=BIGINT},
      </if>
      <if test="metricId != null" >
        #{metricId,jdbcType=BIGINT},
      </if>
      <if test="metricType != null" >
        #{metricType,jdbcType=INTEGER},
      </if>
      <if test="formula != null" >
        #{formula,jdbcType=VARCHAR},
      </if>
      <if test="advanceCalculate != null" >
        #{advanceCalculate,jdbcType=VARCHAR},
      </if>
      <if test="relateMetrics != null" >
        #{relateMetrics,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xy.fedex.catalog.po.MetricModelPO" >
    update metric_model
    <set >
      <if test="modelId != null" >
        model_id = #{modelId,jdbcType=BIGINT},
      </if>
      <if test="metricId != null" >
        metric_id = #{metricId,jdbcType=BIGINT},
      </if>
      <if test="metricType != null" >
        metric_type = #{metricType,jdbcType=INTEGER},
      </if>
      <if test="formula != null" >
        formula = #{formula,jdbcType=VARCHAR},
      </if>
      <if test="advanceCalculate != null" >
        advance_calculate = #{advanceCalculate,jdbcType=VARCHAR},
      </if>
      <if test="relateMetrics != null" >
        relate_metrics = #{advanceCalculate,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xy.fedex.catalog.po.MetricModelPO" >
    update metric_model
    set model_id = #{modelId,jdbcType=BIGINT},
      metric_id = #{metricId,jdbcType=BIGINT},
      metric_type = #{metricType,jdbcType=INTEGER},
      formula = #{formula,jdbcType=VARCHAR},
      advance_calculate = #{advanceCalculate,jdbcType=VARCHAR},
      relate_metrics = #{relateMetrics,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <insert id="batchInsert" parameterType="java.util.List" >
    insert into metric_model (
                              model_id,
                              metric_id,
                              metric_type,
                              formula,
                              advance_calculate,
                              relate_metrics,
                              creator)
    values
    <foreach collection ="list" item="metricModel" index= "index" separator =",">
                  (
                  #{metricModel.modelId},
                  #{metricModel.metricId},
                  #{metricModel.metricType},
                  #{metricModel.formula},
                  #{metricModel.advanceCalculate},
                  #{metricModel.relateMetrics},
                  #{metricModel.creator}
                  )
    </foreach>
  </insert>
  <select id="selectByModelId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from metric_model
    where model_id = #{modelId,jdbcType=BIGINT} and status = 1
  </select>

  <select id="selectMetricDetailByModelId" resultType="com.xy.fedex.catalog.po.MetricModelDetailPO" parameterType="java.lang.Long" >
    select
        t1.id as metricModelId,
        t1.model_id as modelId,
        t1.metric_id as metricId,
        t1.metric_type as metricType,
        t1.formula as formula,
        t1.advance_calculate as advanceCalculate,
        t1.relate_metrics as relateMetrics,
        t2.metric_code as metricCode,
        t2.metric_name as metricName,
        t2.metric_comment as metricComment
    from metric_model t1 left join metric t2 on t1.metric_id = t2.id
    where t1.model_id = #{modelId,jdbcType=BIGINT} and t1.status = 1 and t2.status = 1
  </select>

  <select id="selectByModelIds" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from metric_model
    where model_id in
    <foreach collection="modelIds" item="modelId" open="(" separator="," close=")">
      #{modelId,jdbcType=BIGINT}
    </foreach>
  </select>
</mapper>